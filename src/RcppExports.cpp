// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// make_V
arma::mat make_V(arma::sp_mat x1, arma::sp_mat x10, arma::sp_mat x2);
RcppExport SEXP _did2s_make_V(SEXP x1SEXP, SEXP x10SEXP, SEXP x2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type x10(x10SEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type x2(x2SEXP);
    rcpp_result_gen = Rcpp::wrap(make_V(x1, x10, x2));
    return rcpp_result_gen;
END_RCPP
}
// make_sandwich
arma::mat make_sandwich(arma::sp_mat x2, arma::mat meat_sum);
RcppExport SEXP _did2s_make_sandwich(SEXP x2SEXP, SEXP meat_sumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type meat_sum(meat_sumSEXP);
    rcpp_result_gen = Rcpp::wrap(make_sandwich(x2, meat_sum));
    return rcpp_result_gen;
END_RCPP
}
// make_meat
arma::mat make_meat(arma::sp_mat& x2g, arma::sp_mat& x10g, arma::vec first_ug, arma::vec second_ug, arma::mat& V);
RcppExport SEXP _did2s_make_meat(SEXP x2gSEXP, SEXP x10gSEXP, SEXP first_ugSEXP, SEXP second_ugSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type x2g(x2gSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type x10g(x10gSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type first_ug(first_ugSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type second_ug(second_ugSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(make_meat(x2g, x10g, first_ug, second_ug, V));
    return rcpp_result_gen;
END_RCPP
}
// make_meat_nonsparse
arma::mat make_meat_nonsparse(arma::mat& x2g, arma::mat& x10g, arma::vec first_ug, arma::vec second_ug, arma::mat& V);
RcppExport SEXP _did2s_make_meat_nonsparse(SEXP x2gSEXP, SEXP x10gSEXP, SEXP first_ugSEXP, SEXP second_ugSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x2g(x2gSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x10g(x10gSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type first_ug(first_ugSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type second_ug(second_ugSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(make_meat_nonsparse(x2g, x10g, first_ug, second_ug, V));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_did2s_make_V", (DL_FUNC) &_did2s_make_V, 3},
    {"_did2s_make_sandwich", (DL_FUNC) &_did2s_make_sandwich, 2},
    {"_did2s_make_meat", (DL_FUNC) &_did2s_make_meat, 5},
    {"_did2s_make_meat_nonsparse", (DL_FUNC) &_did2s_make_meat_nonsparse, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_did2s(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
